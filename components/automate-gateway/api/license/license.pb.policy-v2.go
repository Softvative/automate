// Code generated by protoc-gen-policy. DO NOT EDIT.
// source: components/automate-gateway/api/license/license.proto

package license

import policyv2 "github.com/chef/automate/components/automate-gateway/authz/policy_v2"

func init() {
	policyv2.MapMethodTo("/chef.automate.api.license.License/ApplyLicense", "system:license", "system:license:apply", "POST", "/license/apply", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*ApplyLicenseReq); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "license":
					return m.License
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.license.License/GetStatus", "system:status", "system:license:get", "GET", "/license/status", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policyv2.MapMethodTo("/chef.automate.api.license.License/RequestLicense", "system:license", "system:license:request", "POST", "/license/request", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*RequestLicenseReq); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "first_name":
					return m.FirstName
				case "last_name":
					return m.LastName
				case "email":
					return m.Email
				default:
					return ""
				}
			})
		}
		return ""
	})
}
