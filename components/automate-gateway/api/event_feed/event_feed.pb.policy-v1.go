// Code generated by protoc-gen-policy. DO NOT EDIT.
// source: components/automate-gateway/api/event_feed/event_feed.proto

package event_feed

import (
	policy "github.com/chef/automate/components/automate-gateway/api/authz/policy"
	request "github.com/chef/automate/components/automate-gateway/api/event_feed/request"
)

func init() {
	policy.MapMethodTo("/chef.automate.api.event_feed.EventFeed/GetEventFeed", "events", "read", "GET", "/eventfeed", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*request.EventFilter); ok {
			return policy.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "cursor":
					return m.Cursor
				default:
					return ""
				}
			})
		}
		return ""
	})
	policy.MapMethodTo("/chef.automate.api.event_feed.EventFeed/GetEventTypeCounts", "events:types", "count", "GET", "/event_type_counts", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policy.MapMethodTo("/chef.automate.api.event_feed.EventFeed/GetEventTaskCounts", "events:tasks", "count", "GET", "/event_task_counts", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policy.MapMethodTo("/chef.automate.api.event_feed.EventFeed/GetEventStringBuckets", "events:strings", "read", "GET", "/eventstrings", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*request.EventStrings); ok {
			return policy.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "start":
					return m.Start
				case "end":
					return m.End
				case "timezone":
					return m.Timezone
				default:
					return ""
				}
			})
		}
		return ""
	})
}
